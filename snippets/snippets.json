{	
	"data-th-template": {
		"prefix": "dt:tmpl",
		"body": "<!DOCTYPE html>\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Document</title>\n\t</head>\n\t\t<body>\n\n\n\t\t</body>\n</html>",
		"description": "Thymeleaf html template"
	},
	"data-th-fragment": {
		"scope": "html",
		"prefix": "dt:fragment",
		"body":  "data-th-fragment= \"${fragment_name}\"" ,
		"description": "To add fragment attribute to html element thymeleaf template"
	},
	"data-th-text": {
		"scope": "html",
		"prefix": "dt:text",
		"body":  "data-th-text=\"${${1:variable_name}}\"" ,
		"description": "Display dynamic text in a template."
	},
	"data-th-utext": {
		"scope": "html",
		"prefix": "dt:utext",
		"body":  "data-th-utext=\"${${1:variable_name}}\"" ,
		"description": "Display dynamic text in a template, while escaping special characters to prevent XSS attacks."
	},
		"data-th-object": {
		"scope": "html",
		"prefix": "dt:object",
		"body":  "data-th-object=\"${${1:variable_name}}\"" ,
		"description": "Set the value of a form."
	},
		"data-th-field": {
		"scope": "html",
		"prefix": "dt:field",
		"body":  "data-th-field=\"${*{1:variable_name}}\"" ,
		"description": "To add id, name and value html from element"
	},
		"data-th-id": {
		"scope": "html",
		"prefix": "dt:id",
		"body":  "data-th-id= \"${${1:id}}\"" ,
		"description": "To add id attribute to html element"
	},
		"data-th-for": {
		"scope": "html",
		"prefix": "dt:for",
		"body":  "data-th-for= \"${'${1:id}'}\"" ,
		"description": "To add for attribute to html element"
	},
		"data-th-name": {
		"scope": "html",
		"prefix": "dt:name",
		"body":  "data-th-name=\"${${1:variable_name}}\"" ,
		"description": "To add the name at html from element"
	},
		"data-th-value": {
		"scope": "html",
		"prefix": "dt:value",
		"body":  "data-th-value=\"${${1:variable_name}}\"" ,
		"description": "Set the value of an input field, select element, or textarea."
	},
		"data-th-class": {
		"scope": "html",
		"prefix": "dt:class",
		"body":  "data-th-class=\"${${1:variable_name}}\"" ,
		"description": "Set the class of an input field, select element, or textarea."
	},
		"data-th-selected": {
		"scope": "html",
		"prefix": "dt:selected",
		"body":  "data-th-selected= \"${${1:variable_name}}\"" ,
		"description": "To add selected attribute to html input element"
	},
		"data-th-checked": {
		"scope": "html",
		"prefix": "dt:checked",
		"body":  "data-th-checked= \"${${1:variable_name}}\"" ,
		"description": "To add checked attribute to html input element"
	},
		"data-th-replace": {
		"scope": "html",
		"prefix": "dt:replace",
		"body":  "data-th-replace= \"~{${1:path_to_fragment_location} :: ${2:fragment_name }}\"" ,
		"description": "To replace fragment to html content thymeleaf template"
	},
	"data-th-each": {
		"scope": "html",
		"prefix": "dt:each",
		"body":  "data-th-each= \"${2:item_name}:${${1:list_name}}\"" ,
		"description": "To add each loop html element"
	},
	"data-th-if": {
		"scope": "html",
		"prefix": "dt:if",
		"body":  "data-th-if= \"${${1:variable_name}}\"" ,
		"description": "Conditionally include or exclude content based on a Boolean expression."
	},
	"data-th-unless": {
		"scope": "html",
		"prefix": "dt:unless",
		"body":  "data-th-unless= \"${${1:variable_name}}\"" ,
		"description": "Conditionally exclude content based on a Boolean expression."
	},
	"data-th-href": {
		"scope": "html",
		"prefix": "dt:href",
		"body":  "data-th-href= \"@{${1:url}}\"" ,
		"description": "Dynamically set the destination URL for a hyperlink."
	},
	"data-th-style": {
		"scope": "html",
		"prefix": "dt:style",
		"body":  "data-th-style= \"${${1:variable_name}=='${2:conditional}'?'true':'false'}\"" ,
		"description": "Set the inline style for an element."
	},
	"data-th-action": {
		"scope": "html",
		"prefix": "dt:action",
		"body":  "data-th-action= \"${${1:path_name}}\"" ,
		"description": "Specify the URL for form submissions."
	},
	"data-th-attr": {
		"scope": "html",
		"prefix": "dt:attributes",
		"body":  "data-th-attr= \"data-attribute=${1:variable_name}\"",
		"description": "Set arbitrary attributes for an element."
	},
	"data-th-include": {
		"scope": "html",
		"prefix": "dt:include",
		"body":  "data-th-include= \"~{${1:path_to_fragment_location} :: ${2:fragment_name }}\"",
		"description": "Include the contents of another template in the current template."
	},
	"data-th-insert": {
		"scope": "html",
		"prefix": "dt:insert",
		"body":  "data-th-insert= \"~{${1:path_to_location} :: ${2:item_name }}\"",
		"description": "Include the contents of another template in the current template, replacing the contents of an element with an ID that matches the name of the included template."
	},
	"data-th-block": {
		"scope": "html",
		"prefix": "dt:block",
		"body":  "data-th-block= \"${1:variable_name}\"",
		"description": "Define a block of content that can be overridden by templates that extend the current template."
	},
	"data-th-switch": {
		"scope": "html",
		"prefix": "dt:switch",
		"body":  "data-th-switch= \"${1:variables}\"",
		"description": "Conditionally include content based on the value of a variable."
	},
	"data-th-case": {
		"scope": "html",
		"prefix": "dt:case",
		"body":  "data-th-case= \"${1:variable_name}\"",
		"description": "Conjunction with data-th-switch to define a case in a switch statement."
	},
	"data-th-with": {
		"scope": "html",
		"prefix": "dt:with",
		"body":  "data-th-with= \"${1:variable_name}\"",
		"description": "Expose a specific object in the model as a local variable, making it easier to access in the template."
	},
	"data-th-remove": {
		"scope": "html",
		"prefix": "dt:remove",
		"body":  "data-th-remove= \"${1:variable_name}\"",
		"description": "Remove an element from the template, including its contents."
	},

	"th:template": {
		"prefix": "t:tmpl",
		"body": "<!DOCTYPE html>\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Document</title>\n\t</head>\n\t\t<body>\n\n\n\t\t</body>\n</html>",
		"description": "Thymeleaf html template"
	},
	"th:text": {
		"scope": "html",
		"prefix": "t:text",
		"body":  "th:text=\"${${1:variable_name}}\"" ,
		"description": "Display dynamic text in a template."
	},	"th:utext": {
		"scope": "html",
		"prefix": "t:utext",
		"body":  "th:utext=\"${${1:variable_name}}\"" ,
		"description": "Display dynamic text in a template, while escaping special characters to prevent XSS attacks."
	},
		"th:name": {
		"scope": "html",
		"prefix": "t:name",
		"body":  "th:name=\"${${1:variable_name}}\"" ,
		"description": "To add the name at html from element"
	},
		"th:object": {
		"scope": "html",
		"prefix": "t:object",
		"body":  "th:object=\"${${1:variable_name}}\"" ,
		"description": "Set the value of a form."
	},
		"th:value": {
		"scope": "html",
		"prefix": "t:value",
		"body":  "th:value=\"${${1:variable_name}}\"" ,
		"description": "Set the value of an input field, select element, or textarea."
	},
		"th:class": {
		"scope": "html",
		"prefix": "t:class",
		"body":  "th:class=\"${${1:variable_name}}\"" ,
		"description": "Set the class of an input field, select element, or textarea."
	},
		"th:field": {
		"scope": "html",
		"prefix": "t:field",
		"body":  "th:field=\"${*{1:variable_name}}\"" ,
		"description": "To add id, name and value html from element"
	},
		"th:each": {
		"scope": "html",
		"prefix": "t:each",
		"body":  "th:each= \"${2:item_name}:${${1:list_name}}\"" ,
		"description": "To add each loop html element"
	},
		"th:selected": {
		"scope": "html",
		"prefix": "t:selected",
		"body":  "th:selected= \"${${1:variable_name}}\"" ,
		"description": "To add selected attribute to html element"
	},
		"th:checked": {
		"scope": "html",
		"prefix": "t:checked",
		"body":  "th:checked= \"${${1:variable_name}}\"" ,
		"description": "To add checked attribute to html input element"
	},
		"th:id": {
		"scope": "html",
		"prefix": "t:id",
		"body":  "th:id= \"${${1:id}}\"" ,
		"description": "To add id attribute to html element"
	},
		"th:for": {
		"scope": "html",
		"prefix": "t:for",
		"body":  "th:for= \"${'${1:id}'}\"" ,
		"description": "To add for attribute to html element"
	},
		"th:fragment": {
		"scope": "html",
		"prefix": "t:fragment",
		"body":  "th:fragment= \"${1:fragment_name}\"" ,
		"description": "To add fragment attribute to html element thymeleaf template"
	},
	"th:replace": {
		"scope": "html",
		"prefix": "t:replace",
		"body":  "th:replace= \"~{${1:path_to_fragment_location} :: ${2:fragment_name }}\"" ,
		"description": "To replace fragment to html content thymeleaf template"
	},
	"th:if": {
		"scope": "html",
		"prefix": "t:if",
		"body": "th:if= \"${${1:variable_name}}\"",
		"description": "Conditionally include or exclude content based on a Boolean expression."
	},
	"th:unless": {
		"scope": "html",
		"prefix": "t:unless",
		"body": "th:unless= \"${${1:variable_name}}\"",
		"description": "Conditionally exclude content based on a Boolean expression."
	},
	"th:href": {
		"scope": "html",
		"prefix": "t:href",
		"body": "th:href= \"@{${1:url}}\"",
		"description": "Dynamically set the destination URL for a hyperlink."
	},
	"th:style": {
		"scope": "html",
		"prefix": "t:style",
		"body": "th:style= \"${${1:variable_name}=='${2:conditional}'?'true':'false'}\"",
		"description": "Set the inline style for an element."
	},
	"th:action": {
		"scope": "html",
		"prefix": "t:action",
		"body": "th:action= \"${${1:path_name}}\"",
		"description": "Specify the URL for form submissions."
	},
	"th:attr": {
		"scope": "html",
		"prefix": "t:attributes",
		"body": "th:attr= \"data-attribute=${1:variable_name}\"",
		"description": "Set arbitrary attributes for an element."
	},
	"th:include": {
		"scope": "html",
		"prefix": "t:include",
		"body": "th:include= \"~{${1:path_to_fragment_location} :: ${2:fragment_name }}\"",
		"description": "Include the contents of another template in the current template."
	},
	"th:insert": {
		"scope": "html",
		"prefix": "t:insert",
		"body": "th:insert= \"~{${1:path_to_location} :: ${2:item_name }}\"",
		"description": "Include the contents of another template in the current template, replacing the contents of an element with an ID that matches the name of the included template."
	},
	"th:block": {
		"scope": "html",
		"prefix": "t:block",
		"body": "th:block= \"${1:variable_name}\"",
		"description": "Define a block of content that can be overridden by templates that extend the current template."
	},
	"th:switch": {
		"scope": "html",
		"prefix": "t:switch",
		"body": "th:switch= \"${1:variables}\"",
		"description": "Conditionally include content based on the value of a variable."
	},
	"th:case": {
		"scope": "html",
		"prefix": "t:case",
		"body": "th:case= \"${1:variable_name}\"",
		"description": "Conjunction with th:switch to define a case in a switch statement."
	},
	"th:with": {
		"scope": "html",
		"prefix": "t:with",
		"body": "th:with= \"${1:variable_name}\"",
		"description": "Expose a specific object in the model as a local variable, making it easier to access in the template."
	},
	"th:remove": {
		"scope": "html",
		"prefix": "t:remove",
		"body": "th:remove= \"${1:variable_name}\"",
		"description": "Remove an element from the template, including its contents."
	}
}